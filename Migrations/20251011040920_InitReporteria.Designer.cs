// <auto-generated />
using System;
using MarcadorFaseIIApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MarcadorFaseIIApi.Migrations
{
    [DbContext(typeof(MarcadorDbContext))]
    [Migration("20251011040920_InitReporteria")]
    partial class InitReporteria
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MarcadorFaseIIApi.Models.Equipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int>("Faltas")
                        .HasColumnType("int");

                    b.Property<string>("LogoFileName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Puntos")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Equipos");
                });

            modelBuilder.Entity("MarcadorFaseIIApi.Models.EstadisticaJugador", b =>
                {
                    b.Property<int>("EstadisticaJugadorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EstadisticaJugadorId"));

                    b.Property<int>("Asistencias")
                        .HasColumnType("int");

                    b.Property<int>("Bloqueos")
                        .HasColumnType("int");

                    b.Property<int>("JugadorId")
                        .HasColumnType("int");

                    b.Property<int>("Minutos")
                        .HasColumnType("int");

                    b.Property<int>("PartidoId")
                        .HasColumnType("int");

                    b.Property<int>("Puntos")
                        .HasColumnType("int");

                    b.Property<int>("Rebotes")
                        .HasColumnType("int");

                    b.Property<int>("Robos")
                        .HasColumnType("int");

                    b.HasKey("EstadisticaJugadorId");

                    b.HasIndex("JugadorId");

                    b.HasIndex("PartidoId");

                    b.ToTable("EstadisticaJugador", (string)null);
                });

            modelBuilder.Entity("MarcadorFaseIIApi.Models.Falta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EquipoId")
                        .HasColumnType("int");

                    b.Property<int>("JugadorId")
                        .HasColumnType("int");

                    b.Property<int>("Minuto")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EquipoId");

                    b.ToTable("Faltas");
                });

            modelBuilder.Entity("MarcadorFaseIIApi.Models.Jugador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EquipoId")
                        .HasColumnType("int");

                    b.Property<int>("Faltas")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Posicion")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("Puntos")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EquipoId");

                    b.ToTable("Jugadores");
                });

            modelBuilder.Entity("MarcadorFaseIIApi.Models.MarcadorGlobal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CuartoActual")
                        .HasColumnType("int");

                    b.Property<bool>("EnProrroga")
                        .HasColumnType("bit");

                    b.Property<int>("EquipoLocalId")
                        .HasColumnType("int");

                    b.Property<int>("EquipoVisitanteId")
                        .HasColumnType("int");

                    b.Property<int>("NumeroProrroga")
                        .HasColumnType("int");

                    b.Property<bool>("RelojCorriendo")
                        .HasColumnType("bit");

                    b.Property<int>("TiempoRestante")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EquipoLocalId");

                    b.HasIndex("EquipoVisitanteId");

                    b.ToTable("Marcadores");
                });

            modelBuilder.Entity("MarcadorFaseIIApi.Models.Partido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EquipoLocalId")
                        .HasColumnType("int");

                    b.Property<int>("EquipoVisitanteId")
                        .HasColumnType("int");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GameNumber")
                        .HasColumnType("int");

                    b.Property<int?>("MarcadorLocal")
                        .HasColumnType("int");

                    b.Property<int?>("MarcadorVisitante")
                        .HasColumnType("int");

                    b.Property<int?>("SeriePlayoffId")
                        .HasColumnType("int");

                    b.Property<int?>("TorneoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SeriePlayoffId", "GameNumber")
                        .IsUnique()
                        .HasFilter("[SeriePlayoffId] IS NOT NULL AND [GameNumber] IS NOT NULL");

                    b.ToTable("Partidos");
                });

            modelBuilder.Entity("MarcadorFaseIIApi.Models.PartidoHistorico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cuarto")
                        .HasColumnType("int");

                    b.Property<int>("DuracionCuartoSeg")
                        .HasColumnType("int");

                    b.Property<bool>("EnProrroga")
                        .HasColumnType("bit");

                    b.Property<int?>("EquipoLocalId")
                        .HasColumnType("int");

                    b.Property<int?>("EquipoVisitanteId")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FaltasLocal")
                        .HasColumnType("int");

                    b.Property<int>("FaltasVisitante")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("MotivoFin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreLocal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreVisitante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumeroProrroga")
                        .HasColumnType("int");

                    b.Property<int>("PuntosLocal")
                        .HasColumnType("int");

                    b.Property<int>("PuntosVisitante")
                        .HasColumnType("int");

                    b.Property<int?>("TemporadaId")
                        .HasColumnType("int");

                    b.Property<int>("TiempoFinalSeg")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EquipoLocalId");

                    b.HasIndex("EquipoVisitanteId");

                    b.HasIndex("TemporadaId");

                    b.ToTable("PartidosHistoricos");
                });

            modelBuilder.Entity("MarcadorFaseIIApi.Models.PartidoJugador", b =>
                {
                    b.Property<int>("PartidoId")
                        .HasColumnType("int");

                    b.Property<int>("EquipoId")
                        .HasColumnType("int");

                    b.Property<int>("JugadorId")
                        .HasColumnType("int");

                    b.Property<bool>("Titular")
                        .HasColumnType("bit");

                    b.HasKey("PartidoId", "EquipoId", "JugadorId");

                    b.ToTable("PartidosJugadores");
                });

            modelBuilder.Entity("MarcadorFaseIIApi.Models.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRevoked")
                        .HasColumnType("bit");

                    b.Property<string>("ReplacedByToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("MarcadorFaseIIApi.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("MarcadorFaseIIApi.Models.SeriePlayoff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BestOf")
                        .HasColumnType("int");

                    b.Property<bool>("Cerrada")
                        .HasColumnType("bit");

                    b.Property<int>("EquipoAId")
                        .HasColumnType("int");

                    b.Property<int>("EquipoBId")
                        .HasColumnType("int");

                    b.Property<int?>("GanadorEquipoId")
                        .HasColumnType("int");

                    b.Property<int>("Ronda")
                        .HasColumnType("int");

                    b.Property<int>("SeedA")
                        .HasColumnType("int");

                    b.Property<int>("SeedB")
                        .HasColumnType("int");

                    b.Property<int>("TorneoId")
                        .HasColumnType("int");

                    b.Property<int>("WinsA")
                        .HasColumnType("int");

                    b.Property<int>("WinsB")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TorneoId", "Ronda");

                    b.ToTable("Series");
                });

            modelBuilder.Entity("MarcadorFaseIIApi.Models.Temporada", b =>
                {
                    b.Property<int>("TemporadaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TemporadaId"));

                    b.Property<bool>("Activa")
                        .HasColumnType("bit");

                    b.Property<int>("Anio")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TemporadaId");

                    b.ToTable("Temporada", (string)null);
                });

            modelBuilder.Entity("MarcadorFaseIIApi.Models.Torneo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BestOf")
                        .HasColumnType("int");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<int>("Temporada")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Torneos");
                });

            modelBuilder.Entity("MarcadorFaseIIApi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MarcadorFaseIIApi.Models.EstadisticaJugador", b =>
                {
                    b.HasOne("MarcadorFaseIIApi.Models.Jugador", "Jugador")
                        .WithMany()
                        .HasForeignKey("JugadorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MarcadorFaseIIApi.Models.PartidoHistorico", "Partido")
                        .WithMany()
                        .HasForeignKey("PartidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Jugador");

                    b.Navigation("Partido");
                });

            modelBuilder.Entity("MarcadorFaseIIApi.Models.Falta", b =>
                {
                    b.HasOne("MarcadorFaseIIApi.Models.Equipo", "Equipo")
                        .WithMany()
                        .HasForeignKey("EquipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipo");
                });

            modelBuilder.Entity("MarcadorFaseIIApi.Models.Jugador", b =>
                {
                    b.HasOne("MarcadorFaseIIApi.Models.Equipo", "Equipo")
                        .WithMany("Jugadores")
                        .HasForeignKey("EquipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipo");
                });

            modelBuilder.Entity("MarcadorFaseIIApi.Models.MarcadorGlobal", b =>
                {
                    b.HasOne("MarcadorFaseIIApi.Models.Equipo", "EquipoLocal")
                        .WithMany()
                        .HasForeignKey("EquipoLocalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MarcadorFaseIIApi.Models.Equipo", "EquipoVisitante")
                        .WithMany()
                        .HasForeignKey("EquipoVisitanteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("EquipoLocal");

                    b.Navigation("EquipoVisitante");
                });

            modelBuilder.Entity("MarcadorFaseIIApi.Models.Partido", b =>
                {
                    b.HasOne("MarcadorFaseIIApi.Models.SeriePlayoff", "Serie")
                        .WithMany("Partidos")
                        .HasForeignKey("SeriePlayoffId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Serie");
                });

            modelBuilder.Entity("MarcadorFaseIIApi.Models.PartidoHistorico", b =>
                {
                    b.HasOne("MarcadorFaseIIApi.Models.Temporada", "Temporada")
                        .WithMany("Partidos")
                        .HasForeignKey("TemporadaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Temporada");
                });

            modelBuilder.Entity("MarcadorFaseIIApi.Models.PartidoJugador", b =>
                {
                    b.HasOne("MarcadorFaseIIApi.Models.Partido", "Partido")
                        .WithMany("Roster")
                        .HasForeignKey("PartidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Partido");
                });

            modelBuilder.Entity("MarcadorFaseIIApi.Models.SeriePlayoff", b =>
                {
                    b.HasOne("MarcadorFaseIIApi.Models.Torneo", "Torneo")
                        .WithMany("Series")
                        .HasForeignKey("TorneoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Torneo");
                });

            modelBuilder.Entity("MarcadorFaseIIApi.Models.User", b =>
                {
                    b.HasOne("MarcadorFaseIIApi.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("MarcadorFaseIIApi.Models.Equipo", b =>
                {
                    b.Navigation("Jugadores");
                });

            modelBuilder.Entity("MarcadorFaseIIApi.Models.Partido", b =>
                {
                    b.Navigation("Roster");
                });

            modelBuilder.Entity("MarcadorFaseIIApi.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("MarcadorFaseIIApi.Models.SeriePlayoff", b =>
                {
                    b.Navigation("Partidos");
                });

            modelBuilder.Entity("MarcadorFaseIIApi.Models.Temporada", b =>
                {
                    b.Navigation("Partidos");
                });

            modelBuilder.Entity("MarcadorFaseIIApi.Models.Torneo", b =>
                {
                    b.Navigation("Series");
                });
#pragma warning restore 612, 618
        }
    }
}
